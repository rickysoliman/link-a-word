{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"inputField\"];\nfunction AppComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const word_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(word_r2);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.alphabet = Array.from({\n      length: 26\n    }, (_, i) => String.fromCharCode(65 + i));\n    this.nextLetter = this.alphabet[Math.floor(Math.random() * this.alphabet.length)];\n    this.userInput = '';\n    this.wordChain = [];\n  }\n  ngAfterViewInit() {\n    this.inputField.nativeElement.focus();\n  }\n  onInput(event) {\n    const htmlElement = event.target;\n    this.userInput = htmlElement.value.toUpperCase();\n  }\n  onSubmit() {\n    // if (!this.validateWord(this.userInput)) return;\n    this.wordChain.push(this.userInput);\n    this.updateNextLetter();\n  }\n  validateWord() {\n    return this.userInput[0] === this.nextLetter;\n  }\n  updateNextLetter() {\n    this.nextLetter = this.userInput[this.userInput.length - 1];\n    this.userInput = '';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputField = _t.first);\n    }\n  },\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"app-wrapper\"], [1, \"header\"], [1, \"next-letter\"], [\"type\", \"text\", 1, \"user-input\", 3, \"ngModel\", \"input\", \"keydown.enter\", \"ngModelChange\"], [\"inputField\", \"\"], [1, \"word-chain\"], [\"class\", \"word-chain-link\", 4, \"ngFor\", \"ngForOf\"], [1, \"word-chain-link\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Link-A-Word\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3, 4);\n      i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_5_listener($event) {\n        return ctx.onInput($event);\n      })(\"keydown.enter\", function AppComponent_Template_input_keydown_enter_5_listener() {\n        return ctx.onSubmit();\n      })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.userInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtemplate(8, AppComponent_div_8_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.nextLetter);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.wordChain);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAYIA,8BAA4D;IAAAA,YAAU;IAAAA,iBAAM;;;;IAAhBA,eAAU;IAAVA,6BAAU;;;ACL1E,OAAM,MAAOC,YAAY;EALzBC;IAOE,aAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGF,CAAC,CAAC,CAAC;IAC5E,eAAU,GAAW,IAAI,CAACG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACH,QAAQ,CAACL,MAAM,CAAC,CAAC;IACpF,cAAS,GAAW,EAAE;IACtB,cAAS,GAAa,EAAE;;EAExBS,eAAe;IACb,IAAI,CAACC,UAAU,CAACC,aAAa,CAACC,KAAK,EAAE;EACvC;EAEAC,OAAO,CAACC,KAAY;IAClB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAA0B;IACpD,IAAI,CAACC,SAAS,GAAGF,WAAW,CAACG,KAAK,CAACC,WAAW,EAAE;EAClD;EAEAC,QAAQ;IACN;IACA,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC;IACnC,IAAI,CAACM,gBAAgB,EAAE;EACzB;EAEAC,YAAY;IACV,OAAO,IAAI,CAACP,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAACQ,UAAU;EAC9C;EAEAF,gBAAgB;IACd,IAAI,CAACE,UAAU,GAAG,IAAI,CAACR,SAAS,CAAC,IAAI,CAACA,SAAS,CAACjB,MAAM,GAAG,CAAC,CAAC;IAC3D,IAAI,CAACiB,SAAS,GAAG,EAAE;EACrB;;AA7BWrB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA8B;EAAAC;IAAA;;;;;;;;;;;;;MDPzBhC,8BAAyB;MACJA,2BAAW;MAAAA,iBAAK;MACnCA,8BAAyB;MAAAA,YAAgB;MAAAA,iBAAM;MAC/CA,mCAOC;MAHCA;QAAA,OAASiC,mBAAe;MAAA,EAAC;QAAA,OACRA,cAAU;MAAA,EADF;QAAA;MAAA;MAJ3BjC,iBAOC;MACDA,8BAAwB;MACtBA,6DAA4E;MAC9EA,iBAAM;;;MAXmBA,eAAgB;MAAhBA,oCAAgB;MAOvCA,eAAuB;MAAvBA,uCAAuB;MAGuBA,eAAY;MAAZA,uCAAY","names":["i0","AppComponent","constructor","Array","from","length","_","i","String","fromCharCode","alphabet","Math","floor","random","ngAfterViewInit","inputField","nativeElement","focus","onInput","event","htmlElement","target","userInput","value","toUpperCase","onSubmit","wordChain","push","updateNextLetter","validateWord","nextLetter","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/rickymarasigan/Desktop/dev/link-a-word/src/app/app.component.html","/Users/rickymarasigan/Desktop/dev/link-a-word/src/app/app.component.ts"],"sourcesContent":["<div class=\"app-wrapper\">\n  <h1 class=\"header\">Link-A-Word</h1>\n  <div class=\"next-letter\">{{ nextLetter }}</div>\n  <input\n    #inputField\n    type=\"text\" \n    class=\"user-input\" \n    (input)=\"onInput($event)\"\n    (keydown.enter)=\"onSubmit()\"\n    [(ngModel)]=\"userInput\"\n  >\n  <div class=\"word-chain\">\n    <div class=\"word-chain-link\" *ngFor=\"let word of wordChain\">{{ word }}</div>\n  </div>\n</div>","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('inputField') inputField!: ElementRef;\n  alphabet = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\n  nextLetter: string = this.alphabet[Math.floor(Math.random() * this.alphabet.length)];\n  userInput: string = '';\n  wordChain: string[] = [];\n\n  ngAfterViewInit(): void {\n    this.inputField.nativeElement.focus();\n  }\n\n  onInput(event: Event): void {\n    const htmlElement = event.target as HTMLInputElement;\n    this.userInput = htmlElement.value.toUpperCase();\n  }\n\n  onSubmit(): void {\n    // if (!this.validateWord(this.userInput)) return;\n    this.wordChain.push(this.userInput);\n    this.updateNextLetter();\n  }\n\n  validateWord(): boolean {\n    return this.userInput[0] === this.nextLetter;\n  }\n\n  updateNextLetter(): void {\n    this.nextLetter = this.userInput[this.userInput.length - 1];\n    this.userInput = '';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}